{
	"info": {
		"_postman_id": "7a215832-9452-4f37-bf17-aa035bb07d5c",
		"name": "Adhivasindo BookHub API",
		"description": "Postman collection to test the Laravel Take Home Test API (Auth/Sanctum, Books CRUD + search, Loans). Generated 2025-09-17 13:25. Run 'Auth → Login' then 'Auth → Me' to set {token} and {user_id}.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25304163",
		"_collection_link": "https://solar-meteor-130403.postman.co/workspace/My-Workspace~40185266-4389-426c-8be5-519e3432374b/collection/25304163-7a215832-9452-4f37-bf17-aa035bb07d5c?action=share&source=collection_link&creator=25304163"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Login (get Sanctum token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 200/201', function(){ pm.expect(pm.response.code).to.be.oneOf([200,201]); });",
									"let j={}; try{ j=pm.response.json(); }catch(e){}",
									"if (j.token){ pm.collectionVariables.set('token', j.token); }"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{email}}\",\n  \"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"login"
							]
						},
						"description": "Returns a Bearer token and saves it to {{token}}."
					},
					"response": []
				},
				{
					"name": "Me (current user)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 200', function(){ pm.expect(pm.response.code).to.eql(200); });",
									"let j={}; try{ j=pm.response.json(); }catch(e){}",
									"if (j && j.id){ pm.collectionVariables.set('user_id', j.id); }"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"me"
							]
						},
						"description": "Requires route: Route::middleware('auth:sanctum')->get('/me', fn(\\Illuminate\\Http\\Request $r)=>$r->user());"
					},
					"response": []
				}
			]
		},
		{
			"name": "Books",
			"item": [
				{
					"name": "List Books",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('200 OK', function(){ pm.expect(pm.response.code).to.eql(200); });"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/books",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Books (author/year/q)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/books?author={{author}}&year={{year}}&q={{q}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"books"
							],
							"query": [
								{
									"key": "author",
									"value": "{{author}}"
								},
								{
									"key": "year",
									"value": "{{year}}"
								},
								{
									"key": "q",
									"value": "{{q}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Book",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('201 Created', function(){ pm.expect(pm.response.code).to.eql(201); });",
									"let j={}; try{ j=pm.response.json(); }catch(e){}",
									"if (j.data && j.data.id){ pm.collectionVariables.set('book_id', j.data.id); }"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Clean Code\",\n  \"author\": \"Robert C. Martin\",\n  \"published_year\": 2008,\n  \"isbn\": \"9780132350884\",\n  \"stock\": 5\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/books",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Book (stock = 10)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"stock\": 10\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/books/{{book_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"books",
								"{{book_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Book",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/books/{{book_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"books",
								"{{book_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Loans",
			"item": [
				{
					"name": "Create Loan (borrow)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('200/201', function(){ pm.expect(pm.response.code).to.be.oneOf([200,201]); });"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"book_id\": \"{{book_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/loans",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"loans"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Active Loans by User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/loans/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"loans",
								"{{user_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://127.0.0.1:8000"
		},
		{
			"key": "email",
			"value": "iqbaldzulkarnaen12@gmail.com"
		},
		{
			"key": "password",
			"value": "password"
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "user_id",
			"value": ""
		},
		{
			"key": "book_id",
			"value": ""
		},
		{
			"key": "author",
			"value": ""
		},
		{
			"key": "year",
			"value": ""
		},
		{
			"key": "q",
			"value": ""
		}
	]
}